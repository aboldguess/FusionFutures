# ============================================================================
# File: infra/docker/docker-compose.yml
# Purpose: Production-ready docker-compose configuration orchestrating the stack.
# Structure: Defines services for web, api, postgres, pgadmin, caddy, redis, and backups.
# Usage: Invoked via `python scripts/fusionfutures_setup.py` or direct `docker compose` commands.
# ============================================================================
version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: fusion-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: fusion
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fusion
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "fusion"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fusion-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  api:
    build:
      context: ../../
      dockerfile: infra/docker/services/api.Dockerfile
    container_name: fusion-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://fusion:password@postgres:5432/fusion
      SECRET_KEY: super-secret-demo
      CORS_ORIGINS: http://localhost:3100
    ports:
      - "8000:8000"

  web:
    build:
      context: ../../
      dockerfile: infra/docker/services/web.Dockerfile
    container_name: fusion-web
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: http://api:8000
    ports:
      - "3100:3100"

  caddy:
    image: caddy:2-alpine
    container_name: fusion-caddy
    restart: unless-stopped
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - api

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: fusion-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fusionfutures.dev
      PGADMIN_DEFAULT_PASSWORD: adminpass
    ports:
      - "5050:80"
    depends_on:
      - postgres

  backup:
    build:
      context: ../../
      dockerfile: infra/docker/services/backup.Dockerfile
    container_name: fusion-backup
    volumes:
      - postgres-data:/var/lib/postgresql/data:ro
      - ./backups:/backups
    entrypoint: ["/bin/sh", "/scripts/run-backup.sh"]
    depends_on:
      - postgres

volumes:
  postgres-data:
  caddy-data:
  caddy-config:
